(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5001],{17815:(n,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>m});var s=t(95155),o=t(61505),e=t(13297),d=t(13877),a=t(71165),i=t(25832),x=t(67623),p=t(12115),c=t(90101);function m(){let n=(0,p.useRef)(null),r=(0,p.useRef)(null),t=(0,e.k)(n=>n.nodeDark),m=(0,o.B)(),[l,u]=(0,p.useState)("windows"),b=async()=>{n.current&&(await m.initViewer(n.current)).setMarkdown("# Most.Box - Linux 安装教程\r\n\r\n操作系统：Ubuntu Server 24.04\r\n连接服务器：ssh ubuntu@119.91.211.100\r\n\r\n打开防火墙：1976,8080,4001\r\n\r\n## 1. Node.js 安装\r\n\r\n```bash\r\ncurl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -\r\n\r\nsudo apt-get install -y nodejs\r\n\r\nnode -v\r\n# v22.20.0\r\nnpm -v\r\n# 10.9.3\r\n```\r\n\r\n## 2. IPFS 安装\r\n\r\n文档：https://docs.ipfs.tech/install/command-line/#install-official-binary-distributions\r\n\r\n```bash\r\n# 更新系统\r\nsudo apt update\r\n\r\n# 安装必要工具\r\nsudo apt install wget curl tar -y\r\n\r\n# 下载最新版本的 Kubo 在上面文档查找最新版本\r\nwget https://dist.ipfs.tech/kubo/v0.38.1/kubo_v0.38.1_linux-amd64.tar.gz\r\n# 也可以使用 IPNS 下载\r\nwget http://129.226.147.127:8080/ipns/dist.ipfs.tech/kubo/v0.38.1/kubo_v0.38.1_linux-amd64.tar.gz\r\n\r\n# 解压\r\ntar -xvzf kubo_v0.38.1_linux-amd64.tar.gz\r\n\r\n# 进入目录并安装\r\ncd kubo\r\nsudo bash install.sh\r\n\r\n# 验证安装\r\nipfs --version\r\n# ipfs version 0.38.1\r\n\r\n# 初始化 IPFS 仓库\r\nipfs init\r\n\r\n# 设置 8080 端口\r\nipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080\r\n\r\n# 测试启动 IPFS\r\nipfs daemon --enable-gc\r\n\r\n# 静默启动 IPFS\r\n# nohup ipfs daemon --enable-gc > /home/ubuntu/ipfs.log 2>&1 &\r\n\r\n# 关闭 IPFS\r\nipfs shutdown\r\n```\r\n\r\n（替换为服务器 IP）\r\nIPFS 测试访问：http://119.91.211.100:8080\r\n\r\n## 3. Most.Box 安装\r\n\r\n```bash\r\n# 切换到用户目录\r\ncd ~\r\n\r\n# 克隆仓库\r\ngit clone https://github.com/most-people/most.box.git\r\n# 或\r\ngit clone https://gitee.com/most-people/most.box.git\r\n\r\n# 进入目录\r\ncd ~/most.box/dot.most.box\r\n\r\n# 安装依赖\r\nnpm install\r\n\r\n# 测试启动 Most.Box\r\nnode ./src/index.mjs\r\n```\r\n\r\n（替换为服务器 IP）\r\nMost.Box 测试访问：http://119.91.211.100:1976\r\n\r\n## 4. Most.Box 开机启动\r\n\r\n```bash\r\n# 查找 IPFS 安装路径\r\nwhich ipfs\r\n# /usr/local/bin/ipfs\r\n\r\n# 安装 pm2\r\nsudo npm install -g pm2\r\n\r\n# 检查 pm2 是否安装成功\r\npm2 -v\r\n# 6.0.13\r\n\r\n# 启动 IPFS 服务\r\npm2 start /usr/local/bin/ipfs --name ipfs --interpreter none -- daemon --enable-gc\r\n\r\n# 启动 Most.Box（命名为 dot）\r\npm2 start ./src/index.mjs --name dot\r\n\r\n# 配置\r\nsudo env PATH=$PATH pm2 startup systemd -u ubuntu --hp /home/ubuntu\r\n\r\n# 保存当前进程列表\r\npm2 save\r\n\r\n# Linux 设置开机启动\r\npm2 startup\r\n```\r\n\r\n## 5. Caddy 域名配置（可选）\r\n\r\n域名：x-cid.most.box, x.most.box 解析到服务器 IP 地址 119.91.211.100\r\n文档：https://caddyserver.com/docs/install#debian-ubuntu-raspbian\r\n\r\n```bash\r\n# 安装 Caddy\r\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl\r\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\r\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\r\nsudo apt update\r\nsudo apt install caddy\r\n\r\n# 查看版本\r\ncaddy -v\r\n# v2.10.2\r\n\r\n# 编辑 Caddyfile\r\nsudo nano /etc/caddy/Caddyfile\r\n```\r\n\r\n在 **Caddyfile** 文件末尾添加\r\n\r\n```\r\nx.most.box {\r\n    reverse_proxy 127.0.0.1:1976\r\n}\r\n\r\nx-cid.most.box {\r\n    reverse_proxy 127.0.0.1:8080\r\n}\r\n```\r\n\r\n```bash\r\n# 验证\r\nsudo caddy validate --config /etc/caddy/Caddyfile\r\n\r\n# 格式化\r\nsudo caddy fmt --overwrite /etc/caddy/Caddyfile\r\n\r\n# 重启\r\nsudo systemctl reload caddy\r\n\r\n# 查看\r\nsudo systemctl status caddy\r\n```\r\n\r\n（替换为正确域名）\r\nIPFS 测试访问：https://x-cid.most.box\r\nMost.Box 测试访问：https://x.most.box\r\n\r\n## 6. 发布 Most.Box 节点\r\n\r\n```bash\r\n# 进入目录\r\ncd ~/most.box/dot.most.box\r\n\r\n# 节点配置\r\nnano .env\r\n\r\n# 配置文件 .env\r\n\r\nDOT_NAME=Test\r\n# 节点钱包私钥 https://most.box/web3/tools/ （需要一些 Base ETH Gas）\r\nPRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000\r\n# 节点 IP 和 网址\r\nAPI_URLS=https://x.most.box,http://xxx.xxx.xxx.xxx:1976\r\nCID_URLS=https://x-cid.most.box\r\n\r\n\r\n\r\n# （Ctrl + o 保存 -> 回车 -> Ctrl + x 退出\r\n\r\n# 重启节点\r\npm2 restart dot\r\n```\r\n\r\nhttps://dot.most.box 查看已发布的节点\r\n\r\n大功告成！\r\n\r\n通过以上配置，我们可以通过域名访问 Most.Box 前端和 IPFS 网关。\r\n\r\nMost.Box 前端\r\nhttps://x.most.box\r\nhttp://xxx.xxx.xxx.xxx:1976\r\n\r\nIPFS 网关\r\nhttps://x-cid.most.box\r\nhttp://xxx.xxx.xxx.xxx:8080\r\n"),r.current&&(await m.initViewer(r.current)).setMarkdown('# Most.Box - Windows 安装教程\r\n\r\n操作系统：Windows Server 2022\r\n远程桌面连接：119.91.211.100\r\n用户名：Administrator\r\n\r\n打开防火墙：1976,8080,4001\r\n\r\n## 1. Node.js 安装\r\n\r\n打开 https://nodejs.org/zh-cn/download/ 下载 Windows 安装程序(.msi) 安装包\r\n\r\n打开 终端 运行以下命令\r\n\r\n```bash\r\nnode -v\r\n# v22.20.0\r\nnpm -v\r\n# 10.9.3\r\n```\r\n\r\n## 2. IPFS 安装\r\n\r\n文档：https://docs.ipfs.tech/install/command-line/#install-kubo-windows\r\n\r\n复制下载连接：https://dist.ipfs.tech/kubo/v0.38.1/kubo_v0.38.1_windows-amd64.zip\r\n也可以使用 IPNS 下载\r\nhttp://129.226.147.127:8080/ipns/dist.ipfs.tech/kubo/v0.38.1/kubo_v0.38.1_windows-amd64.zip\r\n\r\n添加环境变量：\r\n\r\n解压 kubo 文件夹 到 C:\\Program Files\\kubo\r\n搜索 高级系统设置 -> 环境变量 -> Path -> 编辑 -> 新建 -> 输入 C:\\Program Files\\kubo\r\n\r\n打开 终端 运行以下命令\r\n\r\n```bash\r\n# 验证安装\r\nipfs --version\r\n# ipfs version 0.38.1\r\n\r\n# 初始化 IPFS 仓库\r\nipfs init\r\n\r\n# 设置 8080 端口\r\nipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080\r\n\r\n# 测试启动 IPFS\r\nipfs daemon --enable-gc\r\n\r\n# 关闭 IPFS\r\nipfs shutdown\r\n```\r\n\r\n（替换为服务器 IP）\r\nIPFS 测试访问：http://119.91.211.100:8080\r\n\r\n## 3. Most.Box 安装\r\n\r\n打开 https://git-scm.com/downloads/win\r\n\r\n下载安装包, 安装时选择默认选项。\r\n\r\n打开 Git Bash 运行以下命令\r\n\r\n```bash\r\n# 切换到用户目录\r\ncd ~\r\n\r\n# 克隆仓库\r\ngit clone https://github.com/most-people/most.box.git\r\n# 或\r\ngit clone https://gitee.com/most-people/most.box.git\r\n\r\n# 进入目录\r\ncd ~/most.box/dot.most.box\r\n\r\n# 安装依赖\r\nnpm install\r\n\r\n# 测试启动 Most.Box\r\nnode ./src/index.mjs\r\n```\r\n\r\n（替换为服务器 IP）\r\nMost.Box 测试访问：http://119.91.211.100:1976\r\n\r\n## 4. Most.Box 开机启动\r\n\r\n打开 终端 运行以下命令\r\n\r\n```bash\r\n# 安装 pm2\r\nnpm install -g pm2\r\n\r\n# 检查 pm2 是否安装成功\r\npm2 -v\r\n# 6.0.13\r\n\r\n# 启动 IPFS 服务\r\npm2 start "C:\\Program Files\\kubo\\ipfs.exe" --name ipfs --interpreter none -- daemon --enable-gc\r\n\r\n# 启动 Most.Box（命名为 dot）\r\npm2 start ./src/index.mjs --name dot\r\n\r\n# 保存当前进程列表\r\npm2 save\r\n```\r\n\r\n开机启动\r\n\r\n打开启动文件夹\r\n\r\n`%HOMEPATH%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup`\r\n\r\n创建 `pm2.bat` 文件\r\n\r\n写入以下内容\r\n\r\n```bat\r\n@echo off\r\ncd /d %APPDATA%\\npm\r\nstart "" /b pm2 resurrect\r\n```\r\n\r\n## 5. Caddy 域名配置（可选）\r\n\r\n域名：x-cid.most.box, x.most.box 解析到服务器 IP 地址 119.91.211.100\r\n文档：https://caddyserver.com/download\r\n\r\n添加环境变量：\r\n\r\n新建文件夹：C:\\caddy\\\r\n\r\n下载 caddy_windows_amd64.exe 重命名为 caddy.exe 到 C:\\caddy\\caddy.exe\r\n\r\n搜索 高级系统设置 -> 环境变量 -> Path -> 编辑 -> 新建 -> 输入 C:\\caddy\r\n\r\n新建文本文档 Caddyfile 去掉 .txt 后缀\r\n\r\nC:\\caddy\\Caddyfile\r\n\r\n```\r\nx.most.box {\r\n    reverse_proxy 127.0.0.1:1976\r\n}\r\n\r\nx-cid.most.box {\r\n    reverse_proxy 127.0.0.1:8080\r\n}\r\n```\r\n\r\n打开 终端 运行以下命令\r\n\r\n```bash\r\ncd C:/caddy\r\n\r\n# 验证\r\ncaddy validate\r\n\r\n# 格式化\r\ncaddy fmt --overwrite\r\n\r\n# 测试启动\r\ncaddy start\r\n\r\n# 关闭 caddy\r\ncaddy stop\r\n```\r\n\r\n开机启动\r\n\r\n打开启动文件夹\r\n\r\n`%HOMEPATH%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup`\r\n\r\n创建 `caddy.bat` 文件\r\n\r\n写入以下内容\r\n\r\n```bat\r\n@echo off\r\ncd /d C:\\caddy\r\nstart "" /b caddy run\r\n```\r\n\r\n查看当前配置\r\nhttp://localhost:2019/config/\r\n\r\n（替换为正确域名）\r\nIPFS 测试访问：https://x-cid.most.box\r\nMost.Box 测试访问：https://x.most.box\r\n\r\n## 6. 发布 Most.Box 节点\r\n\r\n打开 Git Bash 运行以下命令\r\n\r\n```bash\r\n# 进入目录\r\ncd ~/most.box/dot.most.box\r\n\r\n# 节点配置\r\nnano .env\r\n\r\n# 配置文件 .env\r\n\r\nDOT_NAME=Test\r\n# 节点钱包私钥 https://most.box/web3/tools/ （需要一些 Base ETH Gas）\r\nPRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000\r\n# 节点 IP 和 网址\r\nAPI_URLS=https://x.most.box,http://xxx.xxx.xxx.xxx:1976\r\nCID_URLS=https://x-cid.most.box\r\n\r\n\r\n\r\n# （Ctrl + o 保存 -> 回车 -> Ctrl + x 退出\r\n\r\n# 重启节点\r\npm2 restart dot\r\n```\r\n\r\nhttps://dot.most.box 查看已发布的节点\r\n\r\n大功告成！\r\n\r\n通过以上配置，我们可以通过域名访问 Most.Box 前端和 IPFS 网关。\r\n\r\nMost.Box 前端\r\nhttps://x.most.box\r\nhttp://xxx.xxx.xxx.xxx:1976\r\n\r\nIPFS 网关\r\nhttps://x-cid.most.box\r\nhttp://xxx.xxx.xxx.xxx:8080\r\n'),u("linux"===new URLSearchParams(window.location.search).get("system")?"linux":"windows")};return(0,p.useEffect)(()=>{b()},[]),(0,p.useEffect)(()=>{let n=new URL(window.location.href);n.searchParams.set("system",l),window.history.replaceState(null,"",n.href)},[l]),(0,s.jsxs)(d.Container,{w:"100%",children:[(0,s.jsx)(c.AppHeader,{title:"部署教程"}),(0,s.jsx)(a.Divider,{my:"md"}),(0,s.jsx)(i.SegmentedControl,{value:l,onChange:u,data:[{label:"Linux",value:"linux"},{label:"Windows",value:"windows"}]}),(0,s.jsx)(a.Divider,{my:"md"}),(0,s.jsx)(x.Box,{hidden:"linux"!==l,className:t,ref:n}),(0,s.jsx)(x.Box,{hidden:"windows"!==l,className:t,ref:r})]})}},68944:(n,r,t)=>{Promise.resolve().then(t.bind(t,17815))}},n=>{n.O(0,[642,2794,5619,6714,8555,8835,5125,6476,8240,101,8289,8441,1255,7358],()=>n(n.s=68944)),_N_E=n.O()}]);