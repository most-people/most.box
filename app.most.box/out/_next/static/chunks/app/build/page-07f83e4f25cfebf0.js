(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5001],{17815:(n,r,s)=>{"use strict";s.r(r),s.d(r,{default:()=>u});var t=s(95155),e=s(61505),d=s(13297),a=s(13877),o=s(71165),i=s(25832),l=s(67623),c=s(12115),p=s(90101);function u(){let n=(0,c.useRef)(null),r=(0,c.useRef)(null),s=(0,d.k)(n=>n.nodeDark),u=(0,e.B)(),[y,m]=(0,c.useState)("windows"),h=async()=>{n.current&&(await u.initViewer(n.current)).setMarkdown("## Ubuntu 安装 Node.js\r\n\r\n```bash\r\ncurl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -\r\n\r\nsudo apt-get install -y nodejs\r\n\r\nnode -v\r\n\r\nnpm -v\r\n\r\nnpm i -g pm2\r\n```\r\n\r\n## Ubuntu 安装 IPFS\r\n\r\n文档 https://docs.ipfs.tech/install/command-line/#install-official-binary-distributions\r\n\r\n```bash\r\n# 更新系统\r\nsudo apt update\r\n\r\n# 安装必要工具\r\nsudo apt install wget curl tar -y\r\n\r\n# 下载最新版本的 Kubo\r\nwget https://dist.ipfs.tech/kubo/v0.36.0/kubo_v0.36.0_linux-amd64.tar.gz\r\n\r\n# 解压\r\ntar -xvzf kubo_v0.36.0_linux-amd64.tar.gz\r\n\r\n# 进入目录并安装\r\ncd kubo\r\nsudo bash install.sh\r\n\r\n# 验证安装\r\nipfs --version\r\n\r\n# 初始化 IPFS 仓库\r\nipfs init\r\n\r\n# 设置 8080 端口\r\nipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080\r\n\r\n# 测试启动 IPFS\r\nipfs daemon\r\n\r\n# 静默启动 IPFS\r\nnohup ipfs daemon > /home/ubuntu/ipfs.log 2>&1 &\r\n\r\n# 关闭 IPFS\r\nipfs shutdown\r\n```\r\n\r\n### 开机启动 IPFS\r\n\r\n```bash\r\n# 1. 创建一个 systemd 服务文件\r\nsudo nano /etc/systemd/system/ipfs.service\r\n\r\n# 提示 User = ubuntu | root 替换为当前用户\r\n```\r\n\r\n```conf\r\n[Unit]\r\nDescription=IPFS Daemon\r\nAfter=network.target\r\n\r\n[Service]\r\nType=simple\r\nUser=root\r\nExecStart=/usr/local/bin/ipfs daemon\r\nRestart=always\r\nRestartSec=10\r\nKillMode=process\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\n```bash\r\n# 启用服务\r\nsudo systemctl enable ipfs.service\r\nsudo systemctl start ipfs.service\r\n```\r\n\r\n## Ubuntu 安装 Caddy\r\n\r\n文档 https://caddyserver.com/docs/install#debian-ubuntu-raspbian\r\n\r\n```bash\r\n# 安装\r\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl\r\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\r\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\r\nsudo apt update\r\nsudo apt install caddy\r\n\r\n# 查看版本\r\ncaddy --version\r\n\r\n# 编辑\r\nsudo nano /etc/caddy/Caddyfile\r\n```\r\n\r\n### Caddyfile\r\n\r\n文件末尾添加\r\n\r\n```\r\ncid.most.box {\r\n    reverse_proxy 127.0.0.1:8080\r\n}\r\n\r\ndot.most.box {\r\n    reverse_proxy 127.0.0.1:1976\r\n}\r\n```\r\n\r\n### 配置 Caddy\r\n\r\n```bash\r\n# 验证\r\nsudo caddy validate --config /etc/caddy/Caddyfile\r\n# 格式化\r\nsudo caddy fmt --overwrite /etc/caddy/Caddyfile\r\n# 重启\r\nsudo systemctl reload caddy\r\n# 查看\r\nsudo systemctl status caddy\r\n```\r\n"),r.current&&(await u.initViewer(r.current)).setMarkdown('## IPFS Desktop\r\n\r\nhttps://docs.ipfs.tech/install/ipfs-desktop/\r\n\r\n[下载安装](https://github.com/ipfs/ipfs-desktop/releases) ipfs-desktop-setup-0.43.0-win-x64.exe\r\n\r\n### 修改 IPFS 配置\r\n\r\n```json\r\n{\r\n  "Addresses": {\r\n    "Gateway": ["/ip4/0.0.0.0/tcp/8080", "/ip6/::/tcp/8080"]\r\n  }\r\n}\r\n```\r\n\r\n重启 - 任务栏 IPFS Desktop 右键 Restart\r\n\r\n### 打开防火墙 1976,8080\r\n\r\n### 开机启动\r\n\r\n1. C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\r\n2. 放入 IFPS Desktop 快捷方式\r\n\r\n## 克隆\r\n\r\n先安装\r\n\r\nGit\r\nhttps://git-scm.com/downloads\r\n\r\nGithub Desktop\r\nhttps://desktop.github.com/download\r\n\r\nNode.js\r\nhttps://nodejs.org/en/download\r\n\r\n```bash\r\n# 二选一\r\ngit clone https://github.com/most-people/most.box.git\r\ngit clone https://gitee.com/most-people/most.box.git\r\n```\r\n\r\n## PM2\r\n\r\n```bash\r\n# 安装 PM2\r\nnpm install -g pm2\r\n\r\n# 进入目录\r\ncd ./dot.most.box/\r\n\r\n# 安装依赖\r\nnpm install\r\n\r\n# 启动应用\r\npm2 start src/index.mjs --name dot\r\n\r\n# 保存当前进程列表\r\npm2 save\r\n\r\n# Windows 设置开机启动\r\nnpm install pm2-windows-startup -g\r\n\r\n# 初始化\r\npm2-startup install\r\n\r\n# Ubuntu 设置开机启动\r\npm2 startup\r\n```\r\n\r\n## 配置文件 .env\r\n\r\n```bash\r\nDOT_NAME=Test\r\n# 节点钱包私钥\r\nPRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000\r\n# custom\r\nAPI_URLS=http://xxx.xxx.xxx.xxx:1976\r\nCID_URLS=\r\n```\r\n\r\n## Caddy 域名配置\r\n\r\n### [Windows 安装 Caddy](https://caddyserver.com/download)\r\n\r\n1. 下载 caddy_windows_amd64.exe 放在 C:\\caddy\\caddy.exe\r\n2. 添加环境变量 C:\\caddy\r\n3. 配置 C:\\caddy\\Caddyfile\r\n\r\n### Caddyfile\r\n\r\n```\r\ncid.most.box {\r\n    reverse_proxy 127.0.0.1:8080\r\n}\r\n\r\ndot.most.box {\r\n    reverse_proxy 127.0.0.1:1976\r\n}\r\n```\r\n\r\n打开 Windows PowerShell (管理员)\r\n\r\n```bash\r\n# 查看版本\r\ncaddy --version\r\n\r\n# 验证\r\ncaddy validate --config C:\\caddy\\Caddyfile\r\n\r\n# 格式化\r\ncaddy fmt --overwrite C:\\caddy\\Caddyfile\r\n\r\n# 启动\r\ncaddy start --config C:\\caddy\\Caddyfile\r\n```\r\n\r\n查看当前配置\r\nhttp://localhost:2019/config/\r\n\r\n> 注：每次开机都需要启动 caddy start\r\n'),m("linux"===new URLSearchParams(window.location.search).get("system")?"linux":"windows")};return(0,c.useEffect)(()=>{h()},[]),(0,c.useEffect)(()=>{let n=new URL(window.location.href);n.searchParams.set("system",y),window.history.replaceState(null,"",n.href)},[y]),(0,t.jsxs)(a.Container,{w:"100%",children:[(0,t.jsx)(p.AppHeader,{title:"部署教程"}),(0,t.jsx)(o.Divider,{my:"md"}),(0,t.jsx)(i.SegmentedControl,{value:y,onChange:m,data:[{label:"Linux",value:"linux"},{label:"Windows",value:"windows"}]}),(0,t.jsx)(o.Divider,{my:"md"}),(0,t.jsx)(l.Box,{hidden:"linux"!==y,className:s,ref:n}),(0,t.jsx)(l.Box,{hidden:"windows"!==y,className:s,ref:r})]})}},68944:(n,r,s)=>{Promise.resolve().then(s.bind(s,17815))}},n=>{n.O(0,[8198,642,2829,5619,6714,8555,8990,5125,7809,101,8289,8441,1255,7358],()=>n(n.s=68944)),_N_E=n.O()}]);